<% 
    const electionData = {
        pos: (id) => {
            for(let i = 0; i < positions.length; i++){
                if(id === positions[i].id){
                    return positions[i].type
                }
            }
        }, 
        candidates: (pos) => {
            let candidates = []
            for(let i = 0; i < election.candidates.length; i++){
                if(election.candidates[i].position === pos){
                    candidates.push(election.candidates[i].fullname)
                }
            }
            return candidates
        }
    }
%>
<div class="py-2">
    <span class="dark:text-gray-300 text-2xl">Votes Tally</span>
</div>
<div class="container mt-3">
    <div class="grid grid-cols-2 gap-3 md:grid-cols-none transition-all">
        <% for(let i = 0; i < election.positions.length; i++) { %>
            <div id="election_positions" data="<%- `c${i}` %>" class="w-full dark:bg-darkBlue-secondary shadow-md bg-gray-200 rounded-md  transition-all">
                <div class="p-2">
                    <span class="p-2 dark:text-gray-300 text-purple-700 text-xl"><%- electionData.pos(election.positions[i].id) %></span>
                </div>
                <div class="container p-1">
                    <canvas id="<%- `chart-${i}` %>"></canvas>
                </div>
            </div>
            <script>
                var ctx = document.getElementById("<%- `chart-${i}` %>")
                var <%- `c${i}` %> = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: null,
                        datasets: [{
                            label: '<%- electionData.pos(election.positions[i].id) %>',
                            data: null,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)',
                                'rgba(255, 159, 64, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true
                    }
                })
                setInterval( () => {
                    let data = {
                        id: '<%- election._id %>', 
                        position: '<%- election.positions[i].id %>'
                    }
                    socket.emit('candidate-names', data, (res) => {
                        if(res.status){
                            <%- `c${i}` %>.data.labels = res.data.names
                            <%- `c${i}` %>.data.datasets[0].data = res.data.votes
                            <%- `c${i}` %>.update()
                        }
                    })
                }, 1000)
            </script>
        <% } %>
    </div>
</div>