<% 
    const Data = {
        position: (id) => {
            for(let i = 0; i < data.positions.length; i++){
                if(id === data.positions[i].id){
                    return data.positions[i].type
                }
            }
        }, 
        partylist: (id) => {
            for(let i = 0; i < data.partylists.length; i++){
                if(id === data.partylists[i].id){
                    return data.partylists[i].type
                }
            }
        }
    }
%>
<div class="voter_form hidden w-full h-full pt-16 px-3 sm:px-0.5">
    <div class="flex flex-col justify-center items-center py-3 gap-3">
        <p style="animation-delay: .250s;" class="dark:text-purple-600 text-purple-700 text-xl font-semibold animate__animated animate__fadeInUp">Election will end in</p>
        <div style="animation-delay: .500s;" id="e_time" class="flipdown animate__animated animate__fadeIn" data="<%- elections.end %>"></div>
    </div>
    <div class="flex flex-col gap-4 mt-5 rounded-md p-2">
        <div class="grid gap-3 grid-cols-3 md:grid-cols-2 sm:grid-cols-none transition-all">
            <% for(let p = 0; p < elections.positions.length; p++) { %> 
                <form style="animation-delay: <%- p * .250 %>s;" class="submit-vote animate__animated animate__fadeInUp ms-500 ">
                    <div class="dark:bg-darkBlue-200 rounded-t-md">
                        <input type="hidden" name="positionType" value="<%- elections.positions[p].id %>">
                        <div class="dark_border_b px-4 py-3 flex items-center justify-start">
                            <span class="dark:text-purple-700 text-xl font-normal"><%- Data.position(elections.positions[p].id) %></span>
                        </div>
                        <div class="px-3 py-2 ">
                            <p class="dark:text-gray-400 text-base"><%- parseInt(elections.positions[p].maxvote) > 1 ? `You may select up to ${elections.positions[p].maxvote} candidates` : 'Select only one candidate' %></p>
                        </div>
                        <div class="px-2 py-1 flex flex-col gap-1 transition-all">
                             <% for (let c = 0; c < elections.candidates.length; c++) { %>
                                 <% if(elections.positions[p].id === elections.candidates[c].position){ %> 
                                     <div style="animation-delay: <%- c * .150%>s;" class="rpl relative cursor-pointer p-1.5">
                                         <input name="vote[]" value='<%- elections.candidates[c].id %>' class="peer absolute w-full h-full opacity-0 cursor-pointer" type="<%- parseInt(elections.positions[p].maxvote) > 1 ? 'checkbox' : 'radio' %>">
                                         <div class="rpl peer-checked:border-teal-600 border-[.1px] border-transparent transition-all dark:bg-darkBlue-100 flex flex-row gap-1 rounded-xl shadow-lg">
                                             <div class="flex-[10%] flex justify-center items-center p-1.5">
                                                 <img class="object-cover w-16 h-16 rounded-full" alt="candidate_profile" src="/assets/image.jpg">
                                             </div>
                                             <div class="flex-[90%] flex flex-col gap-1 items-start justify-center">
                                                 <span class="dark:text-gray-300 text-base"><%- elections.candidates[c].fullname %></span>
                                                 <span class="dark:text-gray-400 text-sm"><%- `${Data.position(elections.candidates[c].position)} at ${Data.partylist(elections.candidates[c].partylist)}` %></span>
                                            </div>
                                         </div>
                                     </div>
                                 <% } %>
                             <% } %>
                         </div>
                    </div>
                    <div class="grid grid-cols-2 justify-center rounded-b-md items-center gap-2 p-3 pt-1.5 dark:bg-darkBlue-200">
                        <button type="reset" class="transition-all w-full text-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm text-white bg-rose-700 dark:bg-rose-800 hover:bg-rose-700 dark:hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-1 dark:focus:ring-offset-darkBlue-secondary dark:focus:ring-rose-800 focus:ring-rose-500">Reset</button>
                        <button type="submit" class="transition-all w-full text-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm text-white bg-purple-700 dark:bg-purple-800 hover:bg-purple-700 dark:hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-1 dark:focus:ring-offset-darkBlue-secondary dark:focus:ring-purple-800 focus:ring-purple-500">Vote</button>
                    </div>
                </form>
             <% } %>
        </div>
    </form>
</div>
<script>
    //get the election starting time  
    new FlipDown((new Date($("#e_time").attr("data")).getTime() / 1000), "e_time").start().ifEnded( () => {})
    //set the theme of flipdown 
    $("#e_time").removeClass(localStorage.getItem('theme') === "dark" ? 'flipdown__theme-dark' : 'flipdown__theme-light')
    $("#e_time").addClass(localStorage.getItem('theme') === "dark"? 'flipdown__theme-light' : 'flipdown__theme-dark')
</script>